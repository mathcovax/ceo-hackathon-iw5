// Generated by @duplojs/types-codegen
/* eslint-disable */
/* prettier-ignore */
/* istanbul ignore file */
/* v8 ignore start */
// noinspection JSUnusedGlobalSymbols
// @ts-nocheck
type SubmissionField = {
    type: "text";
    name: string;
    require: boolean;
    min: number;
    max: number;
} | {
    type: "textarea";
    name: string;
    require: boolean;
    min: number;
    max: number;
} | {
    type: "number";
    name: string;
    require: boolean;
    min: number;
    max: number;
} | {
    type: "date";
    name: string;
    require: boolean;
} | {
    type: "url";
    name: string;
    require: boolean;
} | {
    type: "file";
    name: string;
    require: boolean;
    fileType: "pdf" | "image" | "text" | "csv";
};

export { SubmissionField };

type CodegenRoutes = ({
    method: "POST";
    path: "/create-prestation-sheet";
    body: {
        mode: "ai" | "humain";
        name: string;
        description: string;
        keywords: {
            value: string;
        }[];
        submissionFields: SubmissionField[];
        aIAgent?: {
            pingUrl: string;
            tokenKey: string;
            entryPointUrl: string;
        } | undefined;
    };
    response: {
        code: 503;
        information: "AIAgent.unavaible";
        body?: undefined;
    } | {
        code: 400;
        information: "AIAgent.isMissing";
        body?: undefined;
    } | {
        code: 200;
        information: "prestationSheet.created";
        body?: undefined;
    };
}) | ({
    method: "POST";
    path: "/update-prestation-sheet-description-fields";
    body: {
        name: string;
        description: string;
        keywords: {
            value: string;
        }[];
        prestationSheetId: string;
    };
    response: {
        code: 200;
        information: "prestationSheet.updated";
        body?: undefined;
    };
});

export { CodegenRoutes };
/* v8 ignore stop */
